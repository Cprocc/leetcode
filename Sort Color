//这题目的意思不是很明白，难道是统计0,1,2的个数吗，试试吧.
//我认为直接用默认的stor（nums.start(),nums.end()）也是可以的
class Solution {
public:
    void sortColors(vector<int>& nums) {
       int n=nums.size();
       int count[3]={0,0,0};
        
        for(int i=0;i<n;i++)
        {
            if (nums[i]==0) count[0]++;
              else if (nums[i]==1) count[1]++;
                   else count[2]++;
        }
        
         for (int i=0;i<count[0];i++){nums[i]=0;}
         for (int i=0;i<count[1];i++){nums[count[0]+i]=1;}
         for (int i=0;i<count[2];i++){nums[count[1]+count[0]+i]=2;}
            
    }
};

/*
 1 0 2 2 1 0
    ^         ^
    L         H
    M

    Mid != 0 || 2
    Mid++

    1 0 2 2 1 0
    ^ ^       ^
    L M       H

    Mid == 0
    Swap Low and Mid
    Mid++
    Low++

    0 1 2 2 1 0
      ^ ^     ^
      L M     H

    Mid == 2
    Swap High and Mid
    High--

    0 1 0 2 1 2
      ^ ^   ^
      L M   H

    Mid == 0
    Swap Low and Mid
    Mid++
    Low++

    0 0 1 2 1 2
        ^ ^ ^
        L M H

    Mid == 2
    Swap High and Mid
    High--

    0 0 1 1 2 2
        ^ ^
        L M
          H

    Mid <= High is our exit case
void sortColors(vector<int>& nums) {
    int r=0, w=0, b=0;                // label the end of different colors;
    for(int num: nums){
        if(num==0) {nums[b++]=2; nums[w++]=1; nums[r++]=0; } 
        else if(num==1) {nums[b++]=2; nums[w++]=1;}
        else if(num==2) b++;
    }
}
*/
