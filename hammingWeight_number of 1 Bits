/*
按照posix(可移植操作系统接口)标准，一般整形对应的*_t类型为：
1字节     uint8_t
2字节     uint16_t
4字节     uint32_t
8字节     uint64_t
n＆（n-1）降低最低设置位。这是一个整洁的小技巧。

以n = 00101100为例。这个二进制表示有三个1。

如果n = 00101100，则n-1 = 00101011，则n＆（n-1）= 00101100＆00101011 = 00101000.计数= 1。

如果n = 00101000，那么n-1 = 00100111，所以n＆（n-1）= 00101000＆00100111 = 00100000. Count = 2。

如果n = 00100000，那么n-1 = 00011111，所以n＆（n-1）= 00100000＆00011111 = 00000000. Count = 3。
*/
class Solution {
public:
    int hammingWeight(uint32_t n)
    {
    int res = 0;
    while(n)
    {
        n &= n - 1;
        ++ res;
    }
    return res;
    }
};
